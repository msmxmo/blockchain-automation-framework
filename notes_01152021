    1  sudo root
    2  sudo apt install node
    3  sudo apt-get install node
    4  sudo apt-get install -y nodejs
    5  sudo apt-get install npm
    6  sudo apt update
    7  apt list --upgradable
    8  sudo apt update
    9  java --version
   10  sudo apt install default-jdk
   11  javac --version
   12  sudo apt install git
   13  man curl
   14  curl
   15  sudo apt install curl
   16  docker --version
   17  sudo apt-get update
   18  sudo apt-get install apt-transport-https ca-certificates gnupg-agent software-properties-common
   19  ls
   20  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   21  sudo apt-key fingerprit 0EBFCD88
   22  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
   23  sudo apt-get update
   24  sudo apt-get install docker-ce docker-ce-cli containerd.io
   25  sudo docker run hello-world
   26  ls
   27  docker --version
   28  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname-s)-$(uname -m)" -o /usr/local/bin/docker-compose
   29  ls
   30  sudo chmod +x /usr/local/bin/docker-compose
   31  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
   32  docker-compose --version
   33  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname-s)-$(uname -m)" -o /usr/local/bin/docker-compose
   34  sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
   35  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
   36  docker-compose --version
   37  sudo apt-update
   38  sudo apt update
   39  which python
   40  sudo apt install python3-pip
   41  pip3 list
   42  sudo apt-get update && sudo apt-get install -y apt-transport-https gnupg2 curl
   43  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
   44  echo "deb https://apt.kubernetes.io kubernetes-xenial main" | sudo tee -a /stc/apt/sources.list.d/kubernetes.list
   45  echo "deb https://apt.kubernetes.io kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
   46  sudo apt-get update
   47  sudo apt-get install -y kubectl
   48  which snap
   49  sudo snap install microk8s --classic
   50  microk8s status --wait-ready
   51  sudo usermod -a -G microk8s user
   52  sudo chown -f -R user ~/.kube
   53  microk8s status --wait-ready
   54  curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
   55  sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
   56  sudo apt-get update && sudo apt-get install vault
   57  vault
   58  sudo apt install software-properties-common
   59  sudo apt-add-repository --yes --update ppa:ansible/ansible
   60  sudo apt update
   61  sudo apt-add-repository --remove ppa:ansible/ansible
   62  sudo apt-add-repository --yes --update ppa:ansible/ansible
   63  sudo apt update
   64  sudo apt-add-repository --remove ppa:ansible/ansible
   65  sudo apt install ansible
   66  pip3 install ansible
   67  pip3 install jmespath
   68  pip3 install openshift
   69  sudo snap info microk8s
   70  sudo ufw allow in on cni0 && sudo ufw allow out on cni0
   71  sudo ufw default allow routed
   72  microk8s enable dns dashboard storage
   73  microk8s status
   74  microk8s enable ingress
   75  microk8s status
   76  microk8s kubectl get pods -A
   77  ls .kube/
   78  microk8s config
   79  nc -zv 10.0.2.15 16443
   80  vim ~/.kube/config
   81  sudo apt install vim 
   82  vim ~/.kube/config
   83  kubectl get pods
   84  kubectl get pods -a
   85  kubectl get pods -A
   86  git config user.name
   87  apt-get install git
   88  sudo apt-get install git
   89  git config --global user.name "msmxmo"
   90  git config --global user.email "mary.shalom.l.maximo@accenture.com"
   91  ssh-keygen -q -N "" -f ~/.ssh/gitops
   92  eval "$(ssh-agent)"
   93  ssh-add ~/.ssh/gitops
   94  ls
   95  mkdir workspace
   96  cd workspace/
   97  ls
   98  git clone git@github.com:msmxmo/blockchain-automation-framework.git
   99  sudo apt-get install xclip
  100  xclip -selection clipboard < ~/.ssh/gitops.pub 
  101  git clone git@github.com:msmxmo/blockchain-automation-framework.git
  102  ls
  103  cd blockchain-automation-framework/
  104  git checkout develop
  105  docker --version
  106  cd ~/Downloads/
  107  ls
  108  sudo apt-get install unzip
  109  unzip vault_1.6.1_linux_amd64.zip 
  110  ls
  111  cd -
  112  cd ../
  113  ls
  114  mkdir bin
  115  cd bin/
  116  mv ~/Downloads/vault .
  117  export PATH=~/workspace/bin/:$PATH
  118  ls
  119  cd workspace/
  120  cd bin/
  121  ls
  122  kubectl get pods -A -o wide
  123  kubectl apply -f vaultservice.yaml 
  124  kubectl apply -f vault.yaml 
  125  kubectl get pods -A -o wide
  126  vim vault.yaml 
  127  kubectl apply -f vault.yaml 
  128  kubectl get pods -A -o wide
  129  microk8s config
  130  cat vault.yaml 
  131  kubectl get pods -A -o wide
  132  kubectl logs vault-new-79586b6977-qwjs9
  133  vim keyvault.txt
  134  cd ../blockchain-automation-framework/
  135  git checkout -b local
  136  ls
  137  git push --set-upstream origin local
  138  git branch --set-upstream-to=origin local
  139  git push --set-upstream origin local
  140  git pull origin local
  141  git push --set-upstream origin local
  142  mkdir build
  143  cd build/
  144  cp ~/.ssh/gitops .
  145  cd ..
  146  cp platforms/r3-corda/configuration/samples/network-minikube.yaml build/network.yaml
  147  vim build/network.yaml 
  148  ls
  149  vim run.sh 
  150  cp ~/.kube/config build/
  151  ls
  152  chmod 777 run.sh 
  153  ./run.sh 
  154  pwd
  155  vim run.sh 
  156  ./run.sh 
  157  vim run.sh 
  158  grep -R -n current
  159  grep -R -n current | grep TASK
  160  vim out 
  161  ls
  162  grep -R -n TASK
  163  grep -R -n blockchain-automation-framework | grep home
  164  vim build/network.yaml 
  165  ./run.sh 
  166  helm version --client --short
  167  sudo snap install helm
  168  sudo snap install helm --classic
  169  ./run.sh 
  170  flux version
  171  vim build/network.yaml 
  172  history
  173  kubectl get pods -A -o wide
  174  kubectl get storageclass
  175  vim build/network.yaml 
  176  find . -name *.tpl
  177  find . -name create_doorman.tpl
  178  cp ./platforms/r3-corda/configuration/roles/create/k8_component/templates/create_doorman.tpl ./platforms/r3-corda/configuration/roles/create/k8_component/templates/microk8s_storageclass.tpl
  179  cp ./platforms/r3-corda/configuration/roles/create/k8_component/templates/microk8s_storageclass.tpl 
  180  vim ./platforms/r3-corda/configuration/roles/create/k8_component/templates/microk8s_storageclass.tpl 
  181  ls ./platforms/r3-corda/configuration/roles/create/k8_component/templates/*.tpl
  182  \rm ./platforms/r3-corda/configuration/roles/create/k8_component/templates/microk8s_storageclass.tpl
  183  cp ./platforms/r3-corda/configuration/roles/create/k8_component/templates/mini_storageclass.tpl ./platforms/r3-corda/configuration/roles/create/k8_component/templates/microk8s_storageclass.tpl
  184  vim ./platforms/r3-corda/configuration/roles/create/k8_component/templates/microk8s_storageclass.tpl
  185  ./run.sh 
  186  vim /home/user/workspace/blockchain-automation-framework/build/config
  187  vim build/network.yaml 
  188  ./run.sh 
  189  history
  190  vim ./platforms/r3-corda/configuration/roles/create/k8_component/templates/microk8s_storageclass.tpl
  191  vim build/network.yaml 
  192  find . -name main.yaml
  193  vim ./platforms/r3-corda/configuration/roles/create/k8_component/vars/main.yaml
  194  vim build/network.yaml 
  195  ./run.sh 
  196  sudo ./run.sh 
  197  pip3 install openshift
  198  pip3 install kubernetes
  199  ls
  200  chmod 777 reset.sh 
  201  ./reset.sh 
  202  vim reset.sh 
  203  ./reset.sh 
  204  grep -R -n apiserver | grep k8s
  205  grep -R -n micro
  206  ./run.sh 
  207  ./reset.sh 
  208  sudo ./run.sh 
  209  ./reset.sh 
  210  sudo ./reset.sh 
  211  sudo ./run.sh 
  212  pip3 install ansible
  213  pip3 install openshift
  214  sudo pip3 install openshift
  215  sudo pip3 install ansible
  216  sudo pip3 install kubernetes
  217  sudo ./run.sh 
  218  kubectl get pods
  219  kubectl describe pod flux-local-866996f5d4-bhhg6
  220  kubectl get pods
  221  sudo ./reset.sh 
  222  cd workspace/blockchain-automation-framework/
  223  ls
  224  sudo ./run.sh 
  225  nc -zv 10.1.188.210:8200
  226  nc -zv 10.1.188.210 8200
  227  kubectl get pods -A -o wide
  228  vim build/network.yaml 
  229  printenv VAULT_ADDR
  230  sudo ./run.sh 
  231  kubectl get pods -A -o wide
  232  kubectl get logs vault-new-79586b6977-qwjs9
  233  kubectl logs 
  234  kubectl logs -h
  235  kubectl logs vault-new-79586b6977-qwjs9
  236  vim build/network.yaml 
  237  sudo ./run.sh 
  238  jq
  239  sudo apt install jq
  240  sudo ./run.sh 
  241  vim build/network.yaml 
  242  vim build/config 
  243  microk8s config
  244  vim build/config 
  245  kubectl get pods -A -o wide
  246  kubectl logs vault-new-79586b6977-qwjs9
  247  tim
  248  time
  249  sudo ./run.sh 
  250  kubectl get serviceaccount -A
  251  sudo ./run.sh 
  252  kubectl get serviceaccount -A
  253  kubectl logs vault-new-79586b6977-qwjs9
  254  ls /home/user/workspace/blockchain-automation-framework/platforms/r3-corda/configuration/build/corda/cordadoormanca
  255  ls /home/user/workspace/blockchain-automation-framework/platforms/r3-corda/configuration/build/corda/
  256  ls cordadoormanca
  257  ls /home/user/workspace/blockchain-automation-framework/platforms/r3-corda/configuration/build/corda/cordadoormanca/
  258  kubectl get pods -A -o wide
  259  kubectl logs vault-new-79586b6977-qwjs9
  260  vault kv put doorman/certs
  261  vault kv
  262  vault kv get doorman/certs
  263  export VAULT_ADDR='http://10.1.188.230:8200/'
  264  export VAULT_TOKEN="s.Qt0VgSFkvSWRUwWPWF1mQ82E"
  265  vault secrets enable -version=1 -path=secret kv
  266  sudo ./run.sh 
  267  vault secrets enable -path=doorman kv
  268  sudo ./run.sh 
  269  vault secrets enable -path=auth kv
  270  vault secrets enable -path=cordanetworkmap kv
  271  sudo ./run.sh 
  272  vault secrets enable -path=networkmap kv
  273  sudo ./run.sh 
  274  vault secrets enable -path=cordanotary kv
  275  sudo ./run.sh 
  276  vault secrets enable -path=networkmaptruststore kv
  277  sudo ./run.sh 
  278  vault secrets enable -path=networkmaptruststore kv
  279  sudo ./run.sh 
  280  history
  281  history > notes_01152021
